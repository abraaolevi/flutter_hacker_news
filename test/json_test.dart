import 'dart:convert';

import 'package:flutter_hacker_news/json_parsing.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:http/http.dart' as http;

void main() {
  test("parses topstories.json", () {
    const jsonString =
        "[20231254,20231328,20228689,20229123,20230950,20232136,20231470,20230163,20222286,20231084,20231588,20230133,20230345,20231158,20227175,20216855,20212823,20231693,20207623,20228403,20204063,20231122,20231747,20229145,20201074,20225093,20229387,20229393,20221047,20223370,20222096,20201691,20215038,20227613,20208811,20228089,20227702,20228066,20219156,20228275,20231392,20227499,20231090,20230805,20226848,20229297,20210227,20219767,20228082,20222594,20227115,20210791,20214697,20231467,20230799,20211201,20230553,20222262,20212374,20229432,20209869,20225118,20200335,20221653,20227427,20218924,20218560,20221973,20219563,20222028,20223981,20223766,20214370,20212453,20224157,20224479,20223691,20211942,20227107,20210963,20227325,20225828,20215483,20222899,20220944,20227021,20222442,20228720,20201354,20207217,20226322,20220112,20228214,20230710,20229165,20227439,20213943,20223898,20228121,20222145,20217979,20220927,20230767,20216605,20212737,20223868,20219235,20221815,20219878,20221863,20229537,20220048,20220923,20229503,20222349,20227856,20214320,20212266,20203497,20222492,20221128,20225268,20207135,20211778,20214460,20212090,20217109,20228949,20223743,20227912,20219382,20209569,20230241,20228348,20205566,20226226,20229013,20222547,20225588,20212622,20214901,20221528,20203707,20216990,20221065,20219228,20211207,20210641,20207808,20225203,20204409,20224721,20210338,20222164,20222861,20200760,20224865,20219389,20216516,20226506,20224274,20214502,20202213,20214604,20201557,20218807,20203530,20218951,20221617,20225145,20225512,20219177,20217927,20221518,20227091,20211119,20212999,20227142,20200771,20215296,20210850,20225282,20220476,20222212,20218606,20208778,20222540,20207348,20208143,20224593,20228153,20209816,20218458,20221192,20216321,20216098,20205088,20214332,20206249,20207347,20221821,20224119,20227036,20213003,20217256,20222661,20215331,20221538,20213990,20219743,20215991,20224020,20229334,20222569,20223169,20200685,20200780,20218504,20210686,20226980,20201148,20222230,20207102,20215790,20214868,20211572,20227291,20210113,20207602,20222267,20200573,20211437,20215315,20205103,20223467,20212896,20212078,20206536,20221400,20207439,20206623,20207585,20216672,20205694,20204643,20220714,20207907,20222635,20221088,20206412,20226814,20203710,20226691,20229632,20217087,20220288,20213092,20219828,20220232,20205594,20227612,20227591,20206086,20224556,20202155,20227475,20208579,20205876,20200582,20222288,20209735,20204258,20207427,20207319,20205131,20224816,20206960,20226858,20226497,20210264,20201129,20202869,20218339,20203850,20201631,20222373,20217083,20209597,20203482,20225958,20219984,20217049,20220429,20226942,20206262,20216489,20215731,20208860,20215592,20228040,20204339,20201868,20212315,20222930,20203006,20208559,20203820,20207399,20206661,20213251,20219394,20207189,20209005,20209398,20224341,20215292,20201642,20204590,20223934,20219538,20219337,20221049,20224818,20212869,20207713,20210591,20212505,20213890,20210344,20219457,20219439,20210060,20208169,20210575,20218836,20204294,20203880,20209403,20202635,20222161,20219712,20214409,20210692,20207577,20207791,20217661,20219992,20219842,20218463,20221302,20204744,20211215,20204361,20220826,20210789,20218361,20223005,20218034,20201162,20201189,20204018,20208207,20220291,20209358,20203237,20207369,20207161,20216377,20211963,20202534,20215738,20214553,20210776,20211553,20208849,20218754,20203347,20207943,20212580,20207370,20215382,20210782,20204451,20210667,20211707,20204330,20216599,20208880,20204454,20207444,20210848,20206757,20206477,20208965,20225269,20204871,20206943,20211619,20208727,20203998,20200571,20219681,20200304,20209264,20207163,20210062,20210057,20202063,20209251,20209469,20209463,20202611,20209133,20208466,20208216,20207794,20207376,20203990,20207169,20204474,20203686,20209076,20200639,20209845,20212722,20206535,20208945,20212667,20200883,20202013,20206456,20202227,20207333,20223190,20229954,20225313,20205178,20202001,20211058,20214752,20218678,20200587,20220842,20213725,20221774,20210857,20202795,20220804,20210826,20201485,20217164,20204463,20215764,20204625,20202437,20204393,20204293,20220461,20212372,20201139]";

    expect(parseTopStories(jsonString).first, 20231254);
  });

  test("parses item.json", () {
    const jsonString =
        """{"by":"dhouston","descendants":71,"id":8863,"kids":[9224,8917,8952,8884,8887,8869,8958,8940,8908,9005,8873,9671,9067,9055,8865,8881,8872,8955,10403,8903,8928,9125,8998,8901,8902,8907,8894,8870,8878,8980,8934,8943,8876],"score":104,"time":1175714200,"title":"My YC app: Dropbox - Throw away your USB drive","type":"story","url":"http://www.getdropbox.com/u/2/screencast.html"}""";

    expect(parseArticle(jsonString).by, "dhouston");
  });

  test("parses item.json over network", () async {
    final url = 'https://hacker-news.firebaseio.com/v0/topstories.json';
    final response = await http.get(url);
    final idList = json.decode(response.body);

    final itemUrl = 'https://hacker-news.firebaseio.com/v0/item/${idList.first}.json';
    final itemResponse = await http.get(itemUrl);

    expect(parseArticle(itemResponse.body).id, idList.first);
  });
}
